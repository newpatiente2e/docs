"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[763],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,p(p({ref:t},s),{},{components:n})):r.createElement(f,p({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var c=2;c<o;c++)p[c]=n[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9335:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},p="Integrate Form Recognizer",i={unversionedId:"create-new-patient-app/integrate-ai",id:"create-new-patient-app/integrate-ai",title:"Integrate Form Recognizer",description:"\x3c!--",source:"@site/docs/30-create-new-patient-app/10-integrate-ai.md",sourceDirName:"30-create-new-patient-app",slug:"/create-new-patient-app/integrate-ai",permalink:"/docs/create-new-patient-app/integrate-ai",draft:!1,editUrl:"https://github.com/newpatiente2e/docs/tree/main/docs/30-create-new-patient-app/10-integrate-ai.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Azure Static Web Apps",permalink:"/docs/create-new-patient-app/intro-static-web-apps"},next:{title:"Upload a registration form",permalink:"/docs/create-new-patient-app/upload-doc"}},l={},c=[{value:"Deploy",id:"deploy",level:2},{value:"Open the patient registration app in your browser",id:"open-the-patient-registration-app-in-your-browser",level:2}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"integrate-form-recognizer"},"Integrate Form Recognizer"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Start VS Code and open the ",(0,a.kt)("inlineCode",{parentName:"p"},"contoso_new_patient_app")," folder.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Open the ????? function.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Scroll down to the ",(0,a.kt)("inlineCode",{parentName:"p"},"// TODO: Add code here")," section.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add the following code snippet at the TODO area"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c#"},'var webclient = new WebClient();\nwebclient.Headers.Add("Content-Type", "application/json");\nwebclient.Headers.Add("Ocp-Apim-Subscription-Key", "YOUR_FORM_RECOGNIZER_KEY");\n\n...\n...\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Replace ",(0,a.kt)("inlineCode",{parentName:"p"},"YOUR_FORM_RECOGNIZER_KEY")," with the subscription key for the ",(0,a.kt)("inlineCode",{parentName:"p"},"new_patient")," API.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Save the file."))),(0,a.kt)("h2",{id:"deploy"},"Deploy"),(0,a.kt)("p",null,"Deploy the app to Azure Static Web Apps with the Azure Developer CLI."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"From VS Code, select ",(0,a.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+~")," to open a new terminal.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"From the terminal, run the following command to start the function app. This command will deploy the updated function to Azure."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"azd up ...\n```bash\n")))),(0,a.kt)("h2",{id:"open-the-patient-registration-app-in-your-browser"},"Open the patient registration app in your browser"),(0,a.kt)("p",null,"From your browser, open the patient registration app at the following URL."))}u.isMDXComponent=!0}}]);